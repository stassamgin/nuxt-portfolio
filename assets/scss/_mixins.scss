// =============================================================================
// String Replace (Auxiliary hagfish for font-face)
// =============================================================================
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}
// =============================================================================
// Font Face
// =============================================================================
/// @param {String} $name - name for font-family
/// @param {String} $path - path to the font
/// @param {String} $weight - font-weight
/// @param {String} $style - font-style
/// @param {String} $exts - fonts formats
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: '?',
    svg: '#' + str-replace($name, ' ', '_')
  );

  $formats: (
    otf: 'opentype',
    ttf: 'truetype'
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

@mixin skillBar($skillValue, $childNumber) {
    &:nth-child(#{$childNumber}) {
        &::before {
            width: #{$skillValue + '%'};
        }
        &::after {
            content: '#{$skillValue} %';
            right: calc(#{$skillValue + '%'} - 5rem);
        }
    }
}



@mixin roundBar($roundWidth, 
				$procent, 
				$baseColor, 
				$spaceColor, 
				$bgColor: $baseColor, 
				$angleBar: 0) {

	display: block;
	width: $roundWidth;
	height: $roundWidth;
	background: linear-gradient(
			(90 + $angleBar + calc(#{$procent}*3.6)) + deg,
			#{$spaceColor} 50%, 
			transparent 50%),
		#{$baseColor};
	border-radius: 50%;
	position: relative;

	@if $procent < 50 {

		&::after {
			content: '';
			width: 100%;
			height: 100%;
			position: absolute;
			top: -1px;
			left: -1px;
			background: linear-gradient((90 + $angleBar) + deg, $baseColor 50%, transparent 50%);
			border-radius: 50%;
		}

	} @else {

		&::after {
			content: '';
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			background: linear-gradient((-90 + $angleBar) + deg, $spaceColor 50%, transparent 50%);
			border-radius: 50%;
		}
	}

	&::before {
		content: '#{$procent} %';
		text-align: center;
		line-height: $roundWidth;
		font-size: 350%;
		font-weight: bold;
		color: darken($baseColor,10);
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		background-color: $bgColor;
		border-radius: 50%;
		transform: scale(.85);
		z-index: 50;
	}
}
